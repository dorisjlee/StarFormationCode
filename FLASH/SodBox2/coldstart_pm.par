#	Runtime parameters for the Sod shock-tube problem.

#	Parameters for initial model

#		Density, pressure, and velocity on either side of interface

sim_rhoLeft	= 1.
sim_rhoRight	= 0.125
sim_pLeft		= 1.
sim_pRight		= 0.1
sim_uLeft		= 0.
sim_uRight		= 0.

#		Angle and position of interface relative to x and y axes

# These settings are better for testing 3-d problem, they are little
# less symmetric.

sim_xangle		= 45.
sim_yangle		= 45.
sim_posn		= 1.0  

# To get a simpler test problem which shows the 1-D Profile
# use the following values.
#sim_xangle		= 0
#sim_yangle		= 90.
#sim_posn		= 0.5

#		Gas ratio of specific heats

gamma           = 1.4

#	Computational volume parameters

#		Grid dimensionality and geometry

geometry = cartesian

#		Size of computational volume

xmin		= 0.
xmax		= 1.
ymin		= 0.
ymax		= 1.

#		Boundary conditions

xl_boundary_type = "outflow"
xr_boundary_type = "outflow"

yl_boundary_type = "outflow"
yr_boundary_type = "outflow"


#	Simulation (grid, time, I/O) parameters

cfl		= 0.8
basenm          = "sod_"
restart         = .false.

#	checkpoint file output parameters
checkpointFileIntervalTime = 0.2
checkpointFileIntervalStep = 0
checkpointFileNumber = 0

#	plotfile output parameters
plotfileIntervalTime = 0.
plotfileIntervalStep = 0
plotfileNumber = 0

nend            = 1000
tmax            = .2

run_comment     = "Sod problem, diagonal direction"
log_file        = "sod.log"
eintSwitch     = 1.e-4


plot_var_1 = "dens"
plot_var_2 = "pres"
plot_var_3 = "temp"

#    AMR refinement parameters  
lrefine_max     = 6
refine_var_1    = "dens"

# These parameters are used only for the uniform grid


#iGridSize = 8   #defined as nxb * iprocs
#jGridSize = 8
#kGridSize = 1
iProcs = 1	#number or procs in the i direction	
jProcs = 1
kProcs = 1

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
#FIXEDBLOCKSIZE mode ::
# When using fixed blocksize, iGridSize etc are redundant in
# runtime parameters. These quantities are calculated as 
# iGridSize = NXB*iprocs
# jGridSize = NYB*jprocs
# kGridSize = NZB*kprocs
#NONFIXEDBLOCKSIZE mode ::
# iGridSize etc must be specified. They constitute the global
# number of grid points in the physical domain without taking 
# the guard cell into account. The local blocksize is calculated
# as iGridSize/iprocs  etc.
 
